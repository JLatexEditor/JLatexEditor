package jlatexeditor.gui;

import jlatexeditor.SCEManager;
import sce.codehelper.CHCommand;
import sce.component.SourceCodeEditor;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;

/**
 * Live template editor.
 *
 * @author Stefan Endrullis &lt;stefan@endrullis.de&gt;
 */
public class TemplateEditor extends JDialog {
	public JPanel mainPanel;
	public JList templateList;
	public SourceCodeEditor editor;
	public JCheckBox enabledCheckBox;
	public JButton restoreDefaultButton;
	public JButton addTemplateButton;
	public JButton deleteTemplateButton;
	public JTable attributesTable;

	public TemplateEditor(JFrame owner) {
		super(owner, "Template Editor");

		$$$setupUI$$$();
		setContentPane(mainPanel);

		// populate commandList
		final DefaultListModel templateListModel = new DefaultListModel();
		templateList.setModel(templateListModel);
		for (CHCommand tempalte : SCEManager.getTabCompletions().getCommands().getObjectsIterable("")) {
			templateListModel.addElement(tempalte);
		}
		templateList.addListSelectionListener(new ListSelectionListener() {
			public void valueChanged(ListSelectionEvent e) {
				if (e.getValueIsAdjusting()) return;

				CHCommand template = (CHCommand) templateListModel.getElementAt(templateList.getSelectedIndex());
				load(template);
			}
		});
		templateList.setSelectedIndex(0);

		setModal(true);
		setSize(800, 600);
	}

	private void load(CHCommand template) {
		editor.setText(template.getUsage());
	}

	private void createUIComponents() {
		editor = SCEManager.createLatexSourceCodeEditor();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		createUIComponents();
		mainPanel = new JPanel();
		mainPanel.setLayout(new GridBagLayout());
		final JPanel panel1 = new JPanel();
		panel1.setLayout(new GridBagLayout());
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.gridheight = 2;
		gbc.weightx = 0.4;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		mainPanel.add(panel1, gbc);
		panel1.setBorder(BorderFactory.createTitledBorder("Template Name"));
		deleteTemplateButton = new JButton();
		deleteTemplateButton.setText("Delete");
		deleteTemplateButton.setMnemonic('D');
		deleteTemplateButton.setDisplayedMnemonicIndex(0);
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 1;
		gbc.weightx = 1.0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(0, 4, 4, 4);
		panel1.add(deleteTemplateButton, gbc);
		templateList = new JList();
		templateList.setSelectionMode(0);
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.gridwidth = 2;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0, 4, 4, 4);
		panel1.add(templateList, gbc);
		addTemplateButton = new JButton();
		addTemplateButton.setText("Add");
		addTemplateButton.setMnemonic('A');
		addTemplateButton.setDisplayedMnemonicIndex(0);
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.weightx = 1.0;
		gbc.fill = GridBagConstraints.HORIZONTAL;
		gbc.insets = new Insets(0, 4, 4, 0);
		panel1.add(addTemplateButton, gbc);
		final JPanel panel2 = new JPanel();
		panel2.setLayout(new GridBagLayout());
		panel2.setMinimumSize(new Dimension(100, 57));
		panel2.setPreferredSize(new Dimension(120, 57));
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 0;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		mainPanel.add(panel2, gbc);
		panel2.setBorder(BorderFactory.createTitledBorder("Template Code"));
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0, 4, 4, 4);
		panel2.add(editor, gbc);
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new GridBagLayout());
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 1;
		gbc.weightx = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		mainPanel.add(panel3, gbc);
		panel3.setBorder(BorderFactory.createTitledBorder("Attributes"));
		enabledCheckBox = new JCheckBox();
		enabledCheckBox.setText("Enabled");
		enabledCheckBox.setMnemonic('E');
		enabledCheckBox.setDisplayedMnemonicIndex(0);
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.insets = new Insets(0, 4, 4, 4);
		panel3.add(enabledCheckBox, gbc);
		restoreDefaultButton = new JButton();
		restoreDefaultButton.setText("Restore system template");
		restoreDefaultButton.setMnemonic('R');
		restoreDefaultButton.setDisplayedMnemonicIndex(0);
		gbc = new GridBagConstraints();
		gbc.gridx = 1;
		gbc.gridy = 0;
		gbc.anchor = GridBagConstraints.WEST;
		gbc.insets = new Insets(0, 4, 4, 4);
		panel3.add(restoreDefaultButton, gbc);
		final JScrollPane scrollPane1 = new JScrollPane();
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 1;
		gbc.gridwidth = 2;
		gbc.weightx = 1.0;
		gbc.weighty = 1.0;
		gbc.fill = GridBagConstraints.BOTH;
		gbc.insets = new Insets(0, 4, 4, 4);
		panel3.add(scrollPane1, gbc);
		attributesTable = new JTable();
		scrollPane1.setViewportView(attributesTable);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return mainPanel;
	}
}

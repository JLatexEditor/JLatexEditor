<?xml version="1.0" encoding="UTF-8"?>

<project name="JLatexEditor" default="runJLatexEditor" basedir=".">
	<!-- Update if needed. -->
	<property name="jle.version"        value="0.1"/>

	<!-- Locations -->
	<property name="src"                location="src"/>
	<property name="build"              location="build"/>
	<property name="lib"                location="lib"/>
	<property name="dist"               location="dist"/>
	<property name="upload"             location="${dist}/upload"/>
	<property name="releases"           location="${dist}/releases"/>

	<property name="buildClasses"       location="${build}/classes"/>
	<property name="buildJar"           location="${upload}/JLatexEditor.jar"/>
	
	<path id="libraries">
		<fileset dir="${lib}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<!-- Run application. -->
	<target name="runJLatexEditor" depends="compile">
		<java classname="jlatexeditor.JLatexEditorJFrame" fork="true">
			<classpath>
				<pathelement location="${buildClasses}" /> 
<!-- 				<path refid="libraries"/> -->
			</classpath>
<!--			<jvmarg value="-Djava.util.logging.config.file=conf/logging.properties" />-->
		</java>
	</target>
	
	<!-- Delete class and jar files. -->
	<target name="clean">
		<delete dir="${buildClasses}"/>
		<delete file="${buildJar}"/>
		<delete dir="${build}"/>
	</target>
	
	<!-- Compile application. -->
	<target name="compile">
		<mkdir dir="${buildClasses}"/>
		
		<!-- Compile the project. -->
		<javac srcdir="${src}" destdir="${buildClasses}" target="1.5" source="1.5" encoding="UTF-8" debug="on">
			<classpath>
				<pathelement location="${buildClasses}"/>
<!-- 				<path refid="libraries"/> -->
			</classpath>
		</javac>
		
		<!-- Copy all non-java files to classes. -->
		<copy todir="${buildClasses}">
			<fileset dir="${src}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<!-- Builds the update directory. -->
	<target name="jar" depends="compile,updateBuildNumber">
		<delete dir="${upload}"/>
		<mkdir dir="${upload}"/>

		<!-- Build jar file. -->
		<jar jarfile="${buildJar}" basedir="${buildClasses}">
			<fileset dir=".">
				<include name="data/**"/>
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="jlatexeditor.JLatexEditorJFrame"/>
			</manifest>
		</jar>

		<!-- Copy start scripts. -->
		<copy todir="${upload}">
			<fileset dir="scripts">
				<filename name="jlatexeditor"/>
			</fileset>
		</copy>
		<chmod file="${upload}/jlatexeditor" perm="ugo+x"/>

		<length file="${buildJar}" property="jle.length"/>
		<length file="${upload}/jlatexeditor" property="sh.length"/>

		<!-- Create versions.xml. -->
		<copy todir="${upload}" file="templates/versions.xml"/>
		<replace file="${upload}/versions.xml">
		  <replacefilter token="@jle.version@" value="${jle.version}"/>
			<replacefilter token="@jle.length@" value="${jle.length}"/>
			<replacefilter token="@sh.length@" value="${sh.length}"/>
		  <replacefilter token="@build.number@" value="${build.number}"/>
		</replace>
	</target>

	<!-- Build all files needed for deployment. -->
	<target name="dist" depends="jar">
		<mkdir dir="${releases}"/>

		<!-- Build archives. -->
		<zip basedir="${upload}" zipfile="${releases}/JLatexEditor-${jle.version}.${build.number}.zip"/>
		<!-- tar from ant is unable to take over all file attributes -> therefore we use the command line tar.
		<tar basedir="${upload}" tarfile="${dist}/tmp.tar"/>
		<bzip2 src="${dist}/tmp.tar" destfile="${dist}/JLatexEditor-${jle.version}.${build.number}.tar.bz2"/>
		<delete file="${releases}/tmp.tar"/>
		-->
		<exec executable="/bin/tar">
			<arg value="-czf"/>
			<arg value="${releases}/JLatexEditor-${jle.version}.${build.number}.zip"/>
			<arg value="${upload}/*"/>
		</exec>
	</target>

	<!-- Increments the build number. -->
	<target name="updateBuildNumber">
	  <buildnumber/>

		<echo message="${jle.version}.${build.number}" file="${buildClasses}/version.txt"/>
	</target>

	<!-- Uploads all files to deploy. -->
	<target name="upload" depends="dist">
		<exec executable="scripts/upload">
			<arg value="JLatexEditor-${jle.version}.${build.number}"/>
		</exec>
	</target>
</project>
